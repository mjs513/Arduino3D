

from pylab import *

phi = (1+sqrt(5))*0.5

p1 = float32([
    [0,1,3*phi],
    [0,-1,3*phi],
    [0,1,-3*phi],
    [0,-1,-3*phi]])
    
p2 = float32([
    [2,(1+2*phi),phi],
    [-2,(1+2*phi),phi],
    [2,-(1+2*phi),phi],
    [-2,-(1+2*phi),phi],
    [2,(1+2*phi),-phi],
    [-2,(1+2*phi),-phi],
    [2,-(1+2*phi),-phi],
    [-2,-(1+2*phi),-phi]])
    
p3 = float32([
    [1,(2+phi),2*phi],
    [-1,(2+phi),2*phi],
    [1,-(2+phi),2*phi],
    [-1,-(2+phi),2*phi],
    [1,(2+phi),-2*phi],
    [-1,(2+phi),-2*phi],
    [1,-(2+phi),-2*phi],
    [-1,-(2+phi),-2*phi]
    ])

p1 = concatenate([p1,p1])
p2 = concatenate([p2,p2])
p3 = concatenate([p3,p3])

allp = []




faces ='''1//1 2//2 19//19
1//1 19//19 3//3
3//3 19//19 4//4
19//19 5//5 4//4
9//9 8//8 6//6
9//9 6//6 41//41
41//41 6//6 7//7
6//6 58//58 7//7
8//8 9//9 29//29
8//8 29//29 11//11
11//11 29//29 10//10
29//29 28//28 10//10
1//1 11//11 10//10
1//1 10//10 2//2
2//2 10//10 16//16
10//10 15//15 16//16
27//27 12//12 13//13
27//27 13//13 14//14
14//14 13//13 15//15
13//13 16//16 15//15
13//13 12//12 55//55
13//13 55//55 17//17
17//17 55//55 104//104
55//55 53//53 104//104
104//104 18//18 22//22
104//104 22//22 17//17
17//17 22//22 19//19
22//22 5//5 19//19
20//20 24//24 22//22
20//20 22//22 21//21
21//21 22//22 23//23
22//22 18//18 23//23
24//24 20//20 37//37
24//24 37//37 25//25
25//25 37//37 59//59
37//37 26//26 59//59
14//14 30//30 31//31
14//14 31//31 27//27
27//27 31//31 51//51
31//31 50//50 51//51
30//30 28//28 29//29
30//30 29//29 31//31
31//31 29//29 44//44
29//29 32//32 44//44
34//34 48//48 33//33
34//34 33//33 57//57
57//57 33//33 35//35
33//33 36//36 35//35
35//35 36//36 38//38
35//35 38//38 37//37
37//37 38//38 26//26
38//38 39//39 26//26
39//39 38//38 40//40
39//39 40//40 7//7
7//7 40//40 41//41
40//40 42//42 41//41
42//42 40//40 43//43
42//42 43//43 32//32
32//32 43//43 44//44
43//43 47//47 44//44
46//46 45//45 47//47
46//46 47//47 48//48
48//48 47//47 33//33
47//47 43//43 33//33
45//45 46//46 49//49
45//45 49//49 50//50
50//50 49//49 51//51
49//49 54//54 51//51
52//52 56//56 53//53
52//52 53//53 49//49
49//49 53//53 54//54
53//53 55//55 54//54
23//23 56//56 52//52
23//23 52//52 21//21
21//21 52//52 57//57
52//52 34//34 57//57
59//59 58//58 6//6
59//59 6//6 25//25
25//25 6//6 4//4
6//6 3//3 4//4
61//61 60//60 62//62
61//61 62//62 1//1
62//62 63//63 1//1
64//64 65//65 66//66
64//64 66//66 67//67
66//66 68//68 67//67
19//19 2//2 69//69
19//19 69//69 71//71
69//69 70//70 71//71
72//72 73//73 74//74
72//72 74//74 76//76
74//74 75//75 76//76
77//77 78//78 79//79
77//77 79//79 80//80
79//79 33//33 80//80
81//81 82//82 83//83
81//81 83//83 85//85
83//83 84//84 85//85
88//88 86//86 87//87
88//88 87//87 90//90
87//87 89//89 90//90
92//92 91//91 93//93
92//92 93//93 57//57
93//93 94//94 57//57
41//41 95//95 96//96
41//41 96//96 98//98
96//96 97//97 98//98
101//101 99//99 100//100
101//101 100//100 7//7
100//100 102//102 7//7
103//103 18//18 104//104
103//103 104//104 105//105
104//104 106//106 105//105
107//107 108//108 12//12
107//107 12//12 109//109
12//12 110//110 109//109'''


vertices='''3.741182 0.000000 -19.998800
-3.741183 0.000000 -19.998800
8.050560 6.972720 -17.335459
4.309377 13.026081 -15.023280
-4.309377 13.026081 -15.023280
15.023280 4.309377 -13.026082
19.998800 3.741184 0.000000
15.023280 -4.309377 -13.026081
17.335459 -8.050561 -6.972719
4.309377 -13.026082 -15.023280
8.050560 -6.972720 -17.335459
-17.335459 -8.050561 -6.972718
-15.023280 -4.309377 -13.026081
-6.972720 -17.335459 -8.050560
-4.309377 -13.026081 -15.023281
-8.050559 -6.972721 -17.335459
-15.023280 4.309377 -13.026081
-13.026083 15.023278 -4.309376
-8.050561 6.972719 -17.335459
0.000000 19.998800 3.741182
-6.972720 17.335459 8.050560
-6.972717 17.335459 -8.050561
-13.026081 15.023280 4.309377
0.000000 19.998800 -3.741183
6.972719 17.335459 -8.050561
13.026082 15.023280 4.309377
-13.026081 -15.023280 -4.309377
6.972717 -17.335459 -8.050561
13.026083 -15.023278 -4.309375
0.000000 -19.998800 -3.741185
0.000000 -19.998800 3.741184
13.026082 -15.023280 4.309377
3.741183 0.000000 19.998800
-8.050560 6.972720 17.335459
4.309377 13.026081 15.023281
8.050559 6.972721 17.335459
6.972719 17.335459 8.050561
15.023280 4.309377 13.026081
17.335459 8.050561 6.972718
15.023280 -4.309377 13.026081
19.998800 -3.741184 0.000000
17.335459 -8.050561 6.972717
8.050561 -6.972718 17.335459
6.972719 -17.335459 8.050561
-4.309377 -13.026081 15.023280
-8.050560 -6.972720 17.335459
4.309376 -13.026082 15.023280
-3.741183 0.000000 19.998800
-15.023280 -4.309377 13.026082
-6.972720 -17.335459 8.050561
-13.026081 -15.023280 4.309377
-15.023280 4.309377 13.026081
-19.998800 3.741186 0.000000
-17.335459 -8.050561 6.972718
-19.998800 -3.741185 0.000000
-17.335459 8.050561 6.972719
-4.309377 13.026081 15.023280
17.335459 8.050561 -6.972718
13.026081 15.023280 -4.309377
15.023281 4.309379 -13.026081
8.050560 6.972720 -17.335461
15.023281 -4.309379 -13.026081
8.050559 -6.972721 -17.335459
-4.309377 13.026082 -15.023280
-6.972721 17.335461 -8.050559
0.000000 19.998802 -3.741179
4.309377 13.026082 -15.023280
6.972721 17.335459 -8.050559
-8.050560 -6.972720 -17.335457
-15.023280 -4.309378 -13.026081
-15.023280 4.309378 -13.026082
-6.972719 -17.335457 -8.050561
-4.309377 -13.026081 -15.023280
4.309377 -13.026081 -15.023280
6.972719 -17.335461 -8.050561
0.000000 -19.998800 -3.741183
15.023280 -4.309378 13.026082
15.023280 4.309378 13.026081
8.050560 6.972720 17.335457
8.050561 -6.972719 17.335459
-4.309377 -13.026082 15.023280
-6.972721 -17.335459 8.050559
0.000000 -19.998802 3.741179
6.972721 -17.335461 8.050559
4.309377 -13.026082 15.023280
-8.050559 6.972721 17.335459
-15.023281 4.309379 13.026081
-3.741182 0.000000 19.998800
-15.023281 -4.309379 13.026081
-8.050560 -6.972720 17.335461
6.972719 17.335457 8.050561
4.309377 13.026081 15.023280
0.000000 19.998800 3.741183
-6.972719 17.335461 8.050561
17.335461 -8.050560 6.972720
13.026082 -15.023281 4.309379
13.026082 -15.023281 -4.309379
17.335461 -8.050561 -6.972719
13.026081 15.023281 -4.309379
13.026081 15.023281 4.309379
17.335461 8.050561 -6.972719
17.335459 8.050560 6.972720
-13.026083 15.023278 4.309375
-17.335459 8.050561 -6.972717
-17.335459 8.050562 6.972716
-19.998798 3.741185 0.000000
-17.335459 -8.050562 6.972717
-19.998798 -3.741185 0.000000
-13.026082 -15.023278 4.309376
-13.026081 -15.023280 -4.309376'''

vv = float32([map(float,ll.split()) for ll in vertices.split('\n')])
ff = int32([[int(x.split('//')[0]) for x in ll.split()] for ll in faces.split('\n')])

vv = int16(vv*6+0.5)
ff = uint8(concatenate([ff.T,ones(shape=(1,116))*255]).T)

print repr(ravel(vv))

print np.min(vv)
print np.max(vv)
#print repr(ravel(ff))


